{"ast":null,"code":"var _jsxFileName = \"/home/malte/Documents/WT2-Projekt/koelender_git/koelender/frontend/src/components/uebersicht/UebersichtContent.jsx\";\nimport React from 'react';\nimport { updateState } from './Uebersicht';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SpaltenScript() {\n  const columns_btn = document.querySelector('.hide_columns');\n  const checkboxes = document.querySelector('#checkboxes');\n  const outer_frame = document.querySelector('#outer_frame');\n  columns_btn.classList.toggle('is-active');\n  checkboxes.classList.toggle('is-active');\n  outer_frame.classList.toggle('spalten-is-active');\n  columns_btn.firstChild.data = columns_btn.firstChild.data === \"<\" ? \"Spalten >\" : \"<\";\n  columns_btn.childNodes[1].data = \"\";\n}\n\n_c = SpaltenScript;\nexport function hideShowTable(col_name) {\n  //console.log(col_name);\n  var checkbox_val = document.getElementById(col_name).className; //console.log(checkbox_val);\n\n  if (checkbox_val === \"show\") {\n    let all_col = document.getElementsByClassName(col_name);\n\n    for (let i = 0; i < all_col.length; i++) {\n      all_col[i].style.display = \"none\";\n    }\n\n    document.getElementById(col_name + \"_head\").style.display = \"none\";\n    document.getElementById(col_name).setAttribute(\"class\", \"hide\");\n  } else {\n    let all_col = document.getElementsByClassName(col_name);\n\n    for (let i = 0; i < all_col.length; i++) {\n      all_col[i].style.display = \"table-cell\";\n    }\n\n    document.getElementById(col_name + \"_head\").style.display = \"table-cell\";\n    document.getElementById(col_name).setAttribute(\"class\", \"show\");\n  }\n}\nexport default class KalenderContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: true,\n      pruefungen: [],\n      aktiveFilter: [],\n      searchItem: ''\n    };\n    updateState = updateState.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8000/api/liste/\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        pruefungen: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }); //hideShowTable();\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      pruefungen\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 27\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 36\n      }, this);\n    } else {\n      var pruefungenListe = [];\n      var pruefungenHeader = [];\n      var spaltenFilter = [];\n\n      if (pruefungen[0]) {\n        var pruefungenKeys = Object.keys(pruefungen[0]);\n        let x = 0;\n\n        for (let i = 1; i < pruefungenKeys.length; i++) {\n          pruefungenHeader.push( /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            id: pruefungenKeys[i] + '_col_head',\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: pruefungenKeys[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this));\n          spaltenFilter.push( /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"show\",\n              id: pruefungenKeys[i] + \"_col\",\n              onChange: () => hideShowTable(pruefungenKeys[i] + \"_col\"),\n              defaultChecked: \"true\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                textTransform: \"capitalize\"\n              },\n              children: pruefungenKeys[i]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this));\n        }\n\n        for (let i = 0; i < pruefungen.length; i++) {\n          var pruefungenInstance = [];\n          let pruefungenValues = Object.values(pruefungen[i]);\n          let filteredOut = false;\n          let containsSearch = false;\n\n          for (let j = 1; j < pruefungenValues.length; j++) {\n            pruefungenInstance.push( /*#__PURE__*/_jsxDEV(\"td\", {\n              className: pruefungenKeys[j] + '_col',\n              children: pruefungenValues[j]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 49\n            }, this));\n\n            if (this.state.aktiveFilter[j] !== undefined && this.state.aktiveFilter[j] != pruefungenValues[j]) {\n              filteredOut = true; //console.log(this.state.aktiveFilter[j]);\n              //console.log(pruefungenValues[j]);\n            }\n\n            if (pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLowerCase())) {\n              containsSearch = true;\n              /*console.log(containsSearch);\n              console.log(this.state.searchItem)\n              console.log(pruefungenValues[j].toString())*/\n            }\n          }\n\n          if (!filteredOut && containsSearch) {\n            if (x % 2 === 1) {\n              pruefungenListe.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"second\",\n                children: pruefungenInstance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 50\n              }, this));\n            } else {\n              pruefungenListe.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: pruefungenInstance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 50\n              }, this));\n            }\n\n            x++;\n          }\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"hide_columns\",\n          onClick: () => SpaltenScript(),\n          children: [\"Spalte \", '\\u003E']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"checkboxes\",\n          className: \"sidenav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                id: \"spaltenHeader\",\n                children: \"Spalten\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), spaltenFilter]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ov_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"header_overview\",\n            children: \"\\xDCbersicht\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            id: \"overview_table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: pruefungenHeader\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: pruefungenListe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SpaltenScript\");","map":{"version":3,"sources":["/home/malte/Documents/WT2-Projekt/koelender_git/koelender/frontend/src/components/uebersicht/UebersichtContent.jsx"],"names":["React","updateState","SpaltenScript","columns_btn","document","querySelector","checkboxes","outer_frame","classList","toggle","firstChild","data","childNodes","hideShowTable","col_name","checkbox_val","getElementById","className","all_col","getElementsByClassName","i","length","style","display","setAttribute","KalenderContent","Component","constructor","state","error","isLoaded","pruefungen","aktiveFilter","searchItem","bind","componentDidMount","fetch","method","headers","then","response","json","result","setState","render","message","pruefungenListe","pruefungenHeader","spaltenFilter","pruefungenKeys","Object","keys","x","push","textTransform","pruefungenInstance","pruefungenValues","values","filteredOut","containsSearch","j","undefined","toString","toLowerCase","match"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { updateState } from './Uebersicht';\n\nfunction SpaltenScript() {\n    const columns_btn = document.querySelector('.hide_columns');\n    const checkboxes = document.querySelector('#checkboxes');\n    const outer_frame = document.querySelector('#outer_frame');\n\n    columns_btn.classList.toggle('is-active');\n    checkboxes.classList.toggle('is-active');\n    outer_frame.classList.toggle('spalten-is-active');\n\n    columns_btn.firstChild.data = columns_btn.firstChild.data === \"<\" ? \"Spalten >\" : \"<\";\n    columns_btn.childNodes[1].data = \"\";\n}\n\nexport function hideShowTable(col_name)\n{\n    //console.log(col_name);\n    var checkbox_val=document.getElementById(col_name).className;\n    //console.log(checkbox_val);\n    if(checkbox_val===\"show\")\n    {\n        let all_col=document.getElementsByClassName(col_name);\n        for(let i=0;i<all_col.length;i++)\n        {\n            all_col[i].style.display=\"none\";\n        }\n        document.getElementById(col_name+\"_head\").style.display=\"none\";\n        document.getElementById(col_name).setAttribute(\"class\", \"hide\");\n    }\n\n    else\n    {\n        let all_col=document.getElementsByClassName(col_name);\n        for(let i=0;i<all_col.length;i++)\n        {\n            all_col[i].style.display=\"table-cell\";\n        }\n        document.getElementById(col_name+\"_head\").style.display=\"table-cell\";\n        document.getElementById(col_name).setAttribute(\"class\", \"show\");\n    }\n}\n\n\nexport default class KalenderContent extends React.Component{\n\n    constructor() {\n        super();\n        this.state = {\n            error:null,\n            isLoaded:true,\n            pruefungen: [],\n            aktiveFilter: [],\n            searchItem: ''\n        };\n        updateState = updateState.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:8000/api/liste/\",{\n            method:'GET',\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        \n        .then(\n            (result) => {\n                this.setState({\n                    isLoaded: true,\n                    pruefungen: result,\n                    \n                });\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            }\n        );\n        //hideShowTable();\n    }\n    \n\n    \n\n    render() {\n\n        const { error, isLoaded, pruefungen} = this.state;\n        \n        if(error) {return <div>Error: {error.message}</div>}\n        else if(!isLoaded) {return <div>Loading...</div>}\n\n        else {\n\n            \n            \n            var pruefungenListe = [];\n            var pruefungenHeader = [];\n            var spaltenFilter = [];\n\n            if(pruefungen[0]){\n                var pruefungenKeys = Object.keys(pruefungen[0]);\n                let x = 0;\n\n                for(let i = 1; i<pruefungenKeys.length; i++){\n                    pruefungenHeader.push(\n                    <td style = {{textTransform: \"capitalize\"}} \n                        id = {pruefungenKeys[i]+'_col_head'}>\n                            <b>{pruefungenKeys[i]}</b>\n                    </td>);\n                    spaltenFilter.push(\n                    <li>\n                        <input type=\"checkbox\" \n                            className=\"show\" \n                            id={pruefungenKeys[i]+\"_col\"} \n                            onChange={()=>hideShowTable(pruefungenKeys[i]+\"_col\")} \n                            defaultChecked='true'/>\n                        <label style = {{textTransform: \"capitalize\"}}>{pruefungenKeys[i]}</label>\n                    </li>);\n                \n                }\n\n                for(let i = 0; i<pruefungen.length; i++) {\n                    var pruefungenInstance = [];\n                    let pruefungenValues = Object.values(pruefungen[i]);\n                    let filteredOut = false;\n                    let containsSearch = false\n            \n                    for(let j = 1; j<pruefungenValues.length; j++){\n                        \n                        pruefungenInstance.push(<td className = {pruefungenKeys[j]+'_col'}>{pruefungenValues[j]}</td>);\n                        \n                        if(this.state.aktiveFilter[j]!==undefined&&this.state.aktiveFilter[j]!=pruefungenValues[j]){\n                            filteredOut = true;\n                            //console.log(this.state.aktiveFilter[j]);\n                            //console.log(pruefungenValues[j]);\n                        }\n                        if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLowerCase())){\n                            containsSearch = true;\n                            /*console.log(containsSearch);\n                            console.log(this.state.searchItem)\n                            console.log(pruefungenValues[j].toString())*/\n                        }\n                    }\n                    \n                    if(!filteredOut&&containsSearch) {\n                        if(x%2===1){\n                            pruefungenListe.push(<tr className = 'second'>{pruefungenInstance}</tr>)\n                        } else {\n                            pruefungenListe.push(<tr>{pruefungenInstance}</tr>)\n                        }\n                        x++;\n                    }\n                }\n                \n            }  \n            \n            \n\n            return(\n                <>\n                <button className=\"hide_columns\" onClick={()=>SpaltenScript()}>Spalte {'\\u003E'}</button>\n                <div id=\"checkboxes\" className = \"sidenav\">\n                    <ul>\n                        <li>\n                            <h3 id=\"spaltenHeader\">Spalten</h3>\n                        </li>\n                        {spaltenFilter}\n                        {/*Hier werden die Spaltenfilter generiert*/}\n                    </ul>\n                </div>\n\n                <div id = \"ov_content\">\n                    <h3 id = \"header_overview\">Übersicht</h3>\n\n                    <table id = \"overview_table\">\n                        <thead>\n                            <tr>\n                                {pruefungenHeader}\n                                {/*ToDo: Hier werden die Spaltennamen generiert*/}\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {/*<tr>{this.state.aktiveFilter}</tr>}\n                            {<tr>{this.state.searchItem}</tr>*/}\n                            {pruefungenListe}\n                            {/*rows*/}\n                        </tbody>\n\n                    </table>\n                </div>  \n                </>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}