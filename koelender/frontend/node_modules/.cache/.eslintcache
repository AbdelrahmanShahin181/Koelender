[{"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\index.js":"1","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\Routing.jsx":"2","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\Logo.jsx":"3","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderContent.jsx":"4","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\uebersicht\\UebersichtContent.jsx":"5","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\landing\\Structure.jsx":"6","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\styles\\StylesContent.jsx":"7","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\Content.jsx":"8","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Hamburger.jsx":"9","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Navigation.jsx":"10","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\js\\fetch.js":"11","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\styles\\StyleButton.jsx":"12","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderPopup.jsx":"13","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderDays.jsx":"14","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Filter.jsx":"15"},{"size":223,"mtime":1654072639534,"results":"16","hashOfConfig":"17"},{"size":2983,"mtime":1654072639525,"results":"18","hashOfConfig":"17"},{"size":18471,"mtime":1654072639524,"results":"19","hashOfConfig":"17"},{"size":11066,"mtime":1654597647467,"results":"20","hashOfConfig":"17"},{"size":10238,"mtime":1654597647479,"results":"21","hashOfConfig":"17"},{"size":2119,"mtime":1654597647475,"results":"22","hashOfConfig":"17"},{"size":2020,"mtime":1654597647478,"results":"23","hashOfConfig":"17"},{"size":281,"mtime":1654072639523,"results":"24","hashOfConfig":"17"},{"size":444,"mtime":1654072639528,"results":"25","hashOfConfig":"17"},{"size":1019,"mtime":1654599381155,"results":"26","hashOfConfig":"17"},{"size":653,"mtime":1654073485505,"results":"27","hashOfConfig":"17"},{"size":445,"mtime":1654540529398,"results":"28","hashOfConfig":"17"},{"size":2104,"mtime":1654597647472,"results":"29","hashOfConfig":"17"},{"size":5063,"mtime":1654597647469,"results":"30","hashOfConfig":"17"},{"size":7322,"mtime":1654597647476,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12bvlyz",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\index.js",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\Routing.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\Logo.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderContent.jsx",["81","82","83","84","85","86","87","88","89","90","91"],[],"\r\nimport React from 'react';\r\nimport { updateState } from '../landing/Structure';\r\nimport {renderCalendar, prevMonth, nextMonth} from './KalenderDays'\r\nimport KalenderPopup from './KalenderPopup';\r\nimport '../../css/kalender.css';\r\nimport fetchPruefungen from '../../js/fetch';\r\n\r\nexport default class KalenderContent extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            pruefungPopup: false,\r\n            searchItem: '',\r\n            pruefungenInfos: [],\r\n            calendar: [],\r\n            date: new Date(),\r\n            infos:[],\r\n            dayShown: \"\"\r\n        };\r\n        updateState = updateState.bind(this);\r\n    }\r\n\r\n    setState(state) {\r\n        super.setState(state);\r\n        var calendar = renderCalendar(this.state.pruefungenInfos, this.state.date, this);\r\n        this.state.calendar = calendar[0];\r\n        this.state.date = calendar[1];\r\n    }\r\n    \r\n    togglePopup(infos) {\r\n        //this.hideDayPopup();\r\n        this.setState({\r\n            infos: infos,\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    showDayPopup(day) {\r\n\r\n        let dayPopup = document.querySelector(\"#dayPopup\");\r\n        let dayPopupOuter = document.querySelector(\"#dayPopupOuter\");\r\n        let dayTableCell = document.querySelector(\".\"+day);\r\n        dayPopupOuter.classList.remove('inactive');\r\n        this.setState({\r\n            dayShown: day\r\n        });        \r\n        let dayText =\r\n            day.split(\"y\")[1].split(\"d\")[1].split(\"m\")[0] + \".\" +\r\n            (parseInt(day.split(\"y\")[1].split(\"d\")[1].split(\"m\")[1]) + 1) + \".\" +\r\n            day.split(\"y\")[1].split(\"d\")[0] ;\r\n        dayPopup.innerHTML = \"<h3>\"+dayText+\"</h3><div id = event_list></div>\";\r\n        while(typeof(dayTableCell.childNodes[0]) !== 'undefined' && dayTableCell.childNodes[0] !== 'null') {\r\n            dayPopup.childNodes[1].appendChild(dayTableCell.childNodes[0]);\r\n        }\r\n    }\r\n\r\n    hideDayPopup() {\r\n        console.log(\"empty\");\r\n        let dayPopup = document.querySelector(\"#dayPopup\");\r\n        let day = this.state.dayShown;\r\n        let dayPopupOuter = document.querySelector(\"#dayPopupOuter\");\r\n        let dayTableCell = document.querySelector(\".\"+day);\r\n        while(typeof(dayPopup.childNodes[1].childNodes[0]) !== 'undefined' && dayPopup.childNodes[1].childNodes[0]!== 'null') {\r\n            dayTableCell.appendChild(dayPopup.childNodes[1].childNodes[0]);\r\n        }\r\n        dayPopupOuter.classList.add('inactive');\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchPruefungen(this);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const { error, isLoaded, pruefungen} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenHeader = [];\r\n            var pruefungenInfos1 = [];\r\n\r\n            \r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    \r\n                        pruefungenHeader.push(\r\n                        <td style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_col_head'}\r\n                            className = \"popup_cell\">\r\n                                <b>{pruefungenKeys[i]}</b>\r\n                        </td>);                  \r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    \r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    let filteredOut = false;\r\n                    let containsSearch = false\r\n\r\n                    if (typeof(pruefungen[i].datum)!=='undefined'&&\r\n                        !(pruefungen[i].datum == null)) {\r\n                            let datum = \"\";\r\n                            if (pruefungen[i].datum.includes(\".\")) {\r\n                                let tag =  pruefungen[i].datum.split(\".\")[0];\r\n                                let monat =  pruefungen[i].datum.split(\".\")[1];\r\n                                let jahr =  pruefungen[i].datum.split(\".\")[2];\r\n                                datum = monat + \"/\" + tag + \"/\" + jahr;\r\n                            }\r\n                            else {\r\n                                datum = pruefungen[i].datum;\r\n                            }\r\n                            \r\n                        let pruefungDatum = new Date(datum);\r\n                            \r\n                        \r\n                        for(let j = 1; j<pruefungenValues.length; j++){\r\n                                                \r\n                            if(typeof(this.state.aktiveFilter[j])!==\"undefined\"&&this.state.aktiveFilter[j]!==pruefungenValues[j]){\r\n                                filteredOut = true;\r\n                            }\r\n                            if(pruefungenValues[j]==null){\r\n                                pruefungenValues[j]=\"\"\r\n                            }\r\n                            if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLocaleLowerCase())){\r\n                                containsSearch = true;\r\n                            }\r\n                        }\r\n                        \r\n                        if(!filteredOut&&containsSearch) {\r\n                            let tag = (pruefungDatum.getMonth())*31 + pruefungDatum.getDate();\r\n                            if (typeof(pruefungenInfos1[tag]) === \"undefined\") {\r\n                                pruefungenInfos1[tag] = [];\r\n                            }\r\n                            let pruefungenInstance = [];\r\n                            for (let j = 1; j<pruefungenKeys.length; j++){\r\n                                //console.log(typeof(pruefungenValues[j]));\r\n                                if (pruefungenValues[j].trim()==='') {\r\n                                    pruefungenInstance.push(<td className=\"popup_cell\">NA</td>);\r\n                                }\r\n                                else {\r\n                                    pruefungenInstance.push(<td className=\"popup_cell\">{pruefungenValues[j]}</td>);\r\n                                }\r\n                            }\r\n                      \r\n                            let included = false;\r\n                            let includedAt = -1;\r\n                            for(let k = 0; k<pruefungenInfos1[tag].length; k++){\r\n                                if(pruefungenInfos1[tag][k][1] === pruefungen[i].name) {\r\n                                    included = true;\r\n                                    includedAt = k;\r\n                                }\r\n                            }\r\n\r\n                            if (!included){\r\n                                pruefungenInfos1[tag].push([parseInt(pruefungDatum.getFullYear()), pruefungen[i].name, [<tr>{/*<td id = \"categorycontent\">*/}{pruefungenInstance}{/*</td>*/}</tr>]]);\r\n                                var calendar = renderCalendar(this.state.pruefungenInfos, this.state.date, this);\r\n                                this.state.calendar = calendar[0];\r\n                                this.state.date = calendar[1];\r\n                            }\r\n                            else {\r\n                                pruefungenInfos1[tag][includedAt][2].push(<tr>{/*<td id = \"categorycontent\">*/}{pruefungenInstance}{/*</td>*/}</tr>);\r\n                            }\r\n                           \r\n                        }\r\n                    }   \r\n                }\r\n            }  \r\n            \r\n            if(typeof(this.state.pruefungenInfos[0]) === 'undefined') {\r\n                this.state.pruefungenInfos = pruefungenInfos1;\r\n                this.state.pruefungenInfos[0] = true;\r\n            }\r\n            else if(this.state.pruefungenInfos[0]){\r\n                this.state.pruefungenInfos = pruefungenInfos1;\r\n                this.setState();\r\n                this.state.pruefungenInfos[0] = false;\r\n            }\r\n            else{\r\n                this.state.pruefungenInfos = pruefungenInfos1;\r\n            }\r\n            \r\n        }\r\n    \r\n        return(\r\n            <>\r\n            <table id = \"month\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"prev\" onClick={()=>{\r\n                            this.state.calendar = prevMonth(this.state.pruefungenInfos, this.state.date, this)[0]; \r\n                            updateState(this.state.aktiveFilter, this.state.searchItem);\r\n                            }}>\r\n                        {'\\u276E'}\r\n                        </td>\r\n                        \r\n                        <td id = \"cur_month\">\r\n                            Monat wird errechnet\r\n                        </td>\r\n                        \r\n                        <td className=\"next\" onClick={()=>{\r\n                            this.state.calendar = nextMonth(this.state.pruefungenInfos, this.state.date, this)[0]; \r\n                            updateState(this.state.aktiveFilter, this.state.searchItem);\r\n                            }}>\r\n                            {'\\u276F'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td id = \"cur_year\">\r\n                            <p>Jahr wird initialisiert</p>\r\n                        </td>\r\n                        <td></td>\r\n                        \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <table id = \"calendar_table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mo</th>\r\n                        <th>Di</th>\r\n                        <th>Mi</th>\r\n                        <th>Do</th>\r\n                        <th>Fr</th>\r\n                        <th>Sa</th>\r\n                        <th>So</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = \"days\">\r\n                    {this.state.calendar}\r\n                    {/*Hier wird der Kalender generiert*/}\r\n                    {/*ToDo: Füllen der content divs mit Terminen*/}\r\n                </tbody>\r\n\r\n            </table>\r\n            \r\n            <div id = \"dayPopupOuter\" className= \"popup_outer inactive\" onClick={()=>this.hideDayPopup()}>\r\n                <div className= \"popup_inner\">\r\n                <button onClick={()=>this.hideDayPopup()}>{'\\u2715'}</button>\r\n                    <div id = \"dayPopup\">\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {this.state.showPopup ? \r\n            <KalenderPopup\r\n                categories={pruefungenHeader}\r\n                infos={this.state.infos}\r\n                closePopup={this.togglePopup.bind(this)}\r\n            />\r\n            : null\r\n            }\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\uebersicht\\UebersichtContent.jsx",["92","93"],[],"import React from 'react';\r\nimport { updateState } from '../landing/Structure';\r\nimport '../../css/uebersicht.css';\r\nimport fetchPruefungen from '../../js/fetch';\r\n\r\nfunction SpaltenScript() {\r\n    const columns_btn = document.querySelector('.hide_columns');\r\n    const checkboxes = document.querySelector('#checkboxes');\r\n    const outer_frame = document.querySelector('#outer_frame');\r\n\r\n    columns_btn.classList.toggle('is-active');\r\n    checkboxes.classList.toggle('is-active');\r\n    outer_frame.classList.toggle('spalten-is-active');\r\n\r\n    columns_btn.firstChild.data = columns_btn.firstChild.data === \"<\" ? \"Spalten >\" : \"<\";\r\n    columns_btn.childNodes[1].data = \"\";\r\n}\r\n\r\nexport default class KalenderContent extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            hiddenColumns: [],\r\n            searchItem: '',\r\n            fileDownloadUrl: \"\",\r\n        };\r\n        updateState = updateState.bind(this);\r\n        /*React.useEffect(() => {\r\n            childIcs.current = icsExport(this.pruefungenExport)\r\n        },[])*/\r\n    }\r\n\r\n    sethiddenCol(cols) {\r\n        window.localStorage.setItem('hiddenCols', JSON.stringify(cols));\r\n        this.setState(cols);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchPruefungen(this)\r\n        if(JSON.parse(window.localStorage.getItem('hiddenCols'))) {\r\n            var cols = JSON.parse(window.localStorage.getItem('hiddenCols'));\r\n            this.setState(cols);\r\n        }\r\n    }\r\n    \r\n    toIcsTime(date) {\r\n        return(\r\n        date.getFullYear().toString()+\r\n        ((date.getMonth() + 1)<10? \"0\":\"\") +\r\n        (date.getMonth()+1).toString()+\r\n        (date.getDate()<10? \"0\":\"\") +\r\n        date.getDate().toString()+\r\n        \"T\"+\r\n        (date.getHours()<10? \"0\":\"\") +\r\n        date.getHours().toString()+\r\n        (date.getMinutes()<10? \"0\":\"\") +\r\n        date.getMinutes().toString()+\r\n        \"00\")\r\n    }\r\n\r\n    exportIcs = (event) => {\r\n        const blob = new Blob([event],{type: 'text/plain;charset=utf-8',})\r\n        const fileDownloadUrl = URL.createObjectURL(blob);\r\n        this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n        () => {\r\n            this.dofileDownload.click(); \r\n            URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n            this.setState({fileDownloadUrl: \"\"})\r\n        })   \r\n    }\r\n\r\n    render() {\r\n\r\n        const { error, isLoaded, pruefungen, hiddenColumns} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenListe = [];\r\n            var pruefungenHeader = [];\r\n            var spaltenFilter = [];\r\n            var pruefungenExport = \r\n                \"BEGIN:VCALENDAR\\nPRODID:koelender.de\\nVERSION:2.0\";\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n                let x = 0;\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    if (!hiddenColumns[i]){\r\n                        pruefungenHeader.push(\r\n                        <td style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_col_head'}>\r\n                                <b>{pruefungenKeys[i]}</b>\r\n                        </td>);\r\n                    }\r\n                    spaltenFilter.push(\r\n                    <li>\r\n                        <input type=\"checkbox\" \r\n                            className=\"show\" \r\n                            id={pruefungenKeys[i]+\"_col\"} \r\n                            onChange={()=> {                                \r\n                                if(!hiddenColumns[i] )\r\n                                {   \r\n                                    hiddenColumns[i] = true;\r\n                                    this.sethiddenCol({hiddenColumns});\r\n                                }\r\n\r\n                                else\r\n                                {\r\n                                    hiddenColumns[i] = null;\r\n                                    this.sethiddenCol({hiddenColumns});\r\n                                }\r\n                            }\r\n                            } \r\n                            defaultChecked={!hiddenColumns[i]}/>\r\n                        <label style = {{textTransform: \"capitalize\"}}>{pruefungenKeys[i]}</label>\r\n                    </li>);\r\n                    \r\n                \r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    var pruefungenInstance = [];\r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    let filteredOut = false;\r\n                    let containsSearch = false\r\n            \r\n                    for(let j = 1; j<pruefungenValues.length; j++){\r\n                        \r\n                        if(!hiddenColumns[j]) {\r\n                            pruefungenInstance.push(<td className = {pruefungenKeys[j]+'_col'}>{pruefungenValues[j]}</td>);\r\n                        }\r\n                        \r\n                        if(this.state.aktiveFilter[j]!==undefined&&this.state.aktiveFilter[j]!==null&&this.state.aktiveFilter[j]!==pruefungenValues[j]){\r\n                            filteredOut = true;\r\n                        }\r\n                        if(pruefungenValues[j]==null){\r\n                            pruefungenValues[j]=\"Abdo\"\r\n                        }\r\n                        if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLocaleLowerCase())){\r\n                            containsSearch = true;\r\n                        }\r\n                    }\r\n                    \r\n                    if(!filteredOut&&containsSearch) {\r\n\r\n                        let datum = \"\";\r\n                        if (pruefungen[i].datum.includes(\".\")) {\r\n                            let tag =  pruefungen[i].datum.split(\".\")[0];\r\n                            let monat =  pruefungen[i].datum.split(\".\")[1];\r\n                            let jahr =  pruefungen[i].datum.split(\".\")[2];\r\n                            datum = monat + \"/\" + tag + \"/\" + jahr;\r\n                        }\r\n                        else if (pruefungen[i].datum.includes(\"-\")) {\r\n                            datum =  pruefungen[i].datum.split(\" \")[0];\r\n                        }\r\n                        else {\r\n                            datum = pruefungen[i].datum;\r\n                        }\r\n\r\n                        console.log(datum);\r\n                        \r\n                        var pruefungStart = new Date(datum+\" \"+pruefungen[i].startzeit);\r\n                        if(pruefungStart.getTime() === pruefungStart.getTime()){\r\n                        var pruefungEnd = new Date(datum+\" \"+pruefungen[i].startzeit);\r\n                        if(pruefungen[i].dauer.trim === \"\"){\r\n                            pruefungEnd.setMinutes(pruefungEnd.getMinutes()+parseInt(pruefungen[i].dauer));\r\n                        }\r\n                        var timeStamp = new Date();\r\n                        \r\n                        \r\n                        pruefungenExport = `${pruefungenExport}\\\r\n\\nBEGIN:VEVENT\\\r\n\\nUID:${pruefungen[i].id}@koelender.de\\\r\n\\nLOCATION:${pruefungen[i].pruefungsform}\\\r\n\\nSUMMARY:${pruefungen[i].name}\\\r\n\\nDESCRIPTION:${pruefungen[i].name + \r\n\"\\\\nStudiengang: \" + pruefungen[i].studiengang + \r\n\"\\\\nSemester: \" + pruefungen[i].semester +\r\n\"\\\\nPrüfer: \" + pruefungen[i].pruefer}\\\r\n\\nDTSTART;VALUE=DATE-TIME:${this.toIcsTime(pruefungStart)}\\\r\n\\nDTEND;VALUE=DATE-TIME:${this.toIcsTime(pruefungEnd)}\\\r\n\\nDTSTAMP;VALUE=DATE-TIME:${this.toIcsTime(timeStamp)}\\\r\n\\nEND:VEVENT`;\r\n                        }\r\n                        \r\n                        if(x%2===1){\r\n                            pruefungenListe.push(<tr className = 'second'>{pruefungenInstance}</tr>)\r\n                        } else {\r\n                            pruefungenListe.push(<tr>{pruefungenInstance}</tr>)\r\n                        }\r\n                        x++;\r\n                    }\r\n                }\r\n                pruefungenExport = pruefungenExport+\"\\nEND:VCALENDAR\";\r\n                this.state.pruefungenExport = pruefungenExport;\r\n                \r\n            }  \r\n            \r\n           \r\n\r\n            return(\r\n                <>\r\n                <button className=\"hide_columns\" onClick={()=>SpaltenScript()}>Spalte {'\\u003E'}</button>\r\n                <div id=\"checkboxes\" className = \"sidenav\">\r\n                    <ul>\r\n                        <li>\r\n                            <h3 id=\"spaltenHeader\">Spalten</h3>\r\n                        </li>\r\n                        {spaltenFilter}\r\n                        {/*Hier werden die Spaltenfilter generiert*/}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id = \"ov_content\">\r\n\r\n                    <a style={{display: \"none\"}}\r\n                        download=\"koelender.ics\"\r\n                        href={this.state.fileDownloadUrl}\r\n                        ref={e=>this.dofileDownload = e}\r\n                    >download it</a>\r\n\r\n                    <button id = \"export_btn\" onClick={()=>this.exportIcs(pruefungenExport.replace(' ', '').replace(\"\\\\t\", \"\"))}>Export</button>\r\n                    \r\n                    <h3 id = \"header_overview\">Übersicht</h3>\r\n\r\n                    <table id = \"overview_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {pruefungenHeader}\r\n                                {/*ToDo: Hier werden die Spaltennamen generiert*/}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/*<tr>{this.state.aktiveFilter}</tr>}\r\n                            {<tr>{this.state.searchItem}</tr>*/}\r\n                            {pruefungenListe}\r\n                            {/*rows*/}\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>  \r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\landing\\Structure.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\styles\\StylesContent.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\Content.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Hamburger.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Navigation.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\js\\fetch.js",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\styles\\StyleButton.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderPopup.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderDays.jsx",["94"],[],"export function renderCalendar(infos, date, instance) {\r\n    \r\n    const month = date.getMonth();\r\n    const lastDay = new Date(date.getFullYear(), date.getMonth()+1,0).getDate();\r\n\r\n    date.setDate(1);\r\n    const firstDayIndex = date.getDay();\r\n    const lastMonthDays = new Date(date.getFullYear(), date.getMonth(),0).getDate();\r\n\r\n    const months = [\r\n        \"Januar\",\r\n        \"Februar\",\r\n        \"März\",\r\n        \"April\",\r\n        \"Mai\",\r\n        \"Juni\",\r\n        \"Juli\",\r\n        \"August\",\r\n        \"September\",\r\n        \"Oktober\",\r\n        \"November\",\r\n        \"Dezember\"\r\n    ];\r\n\r\n    document.querySelector(\"#cur_month\").innerHTML \r\n    = months[month];\r\n\r\n    document.querySelector(\"#cur_year\").innerHTML \r\n    = \"<p>\" + date.getFullYear() + \"</p>\";\r\n\r\n    let days = [];\r\n\r\n    let i = 1;\r\n    let week = [];\r\n    let event = [];\r\n\r\n    for(let x=firstDayIndex-1; x!==0; x--) {\r\n        \r\n        if(typeof(infos[(date.getMonth()-1)*31+(lastMonthDays-x+1)]) !== \"undefined\") {\r\n            for(let j = 0; j<infos[(date.getMonth()-1)*31+(lastMonthDays-x+1)].length; j++)\r\n            if (infos[(date.getMonth()-1)*31+(lastMonthDays-x+1)][j][0] === date.getFullYear()) {\r\n                \r\n                event.push(<div id = \"event\" onClick={()=>{instance.togglePopup(infos[(date.getMonth()-1)*31+(lastMonthDays-x+1)][j])}} >{infos[(date.getMonth()-1)*31+(lastMonthDays-x+1)][j][1]}</div>);\r\n                \r\n            }\r\n            else {\r\n                event = [];\r\n            }\r\n        }\r\n        else {\r\n            event = [];\r\n        }\r\n        if (x===-1) {\r\n            x=6;\r\n        }\r\n        week.push( <td id=\"other_month\" class=\"day\">\r\n                <div id=\"date\" onClick={()=>instance.showDayPopup(\"y\" + date.getFullYear() + \"d\" + (lastMonthDays-x+1) + \"m\" + (date.getMonth()-1))}>{lastMonthDays-x+1}</div>\r\n                <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + (lastMonthDays-x+1) + \"m\" + (date.getMonth()-1)}> {event} </div>\r\n            </td>);\r\n        event = [];\r\n        i++;\r\n    }\r\n\r\n    \r\n\r\n    for(let y=1; y<=lastDay;y++) {\r\n        \r\n        \r\n        if (i%7 === 1) {\r\n            days.push(<tr>{week}</tr>);\r\n            week = [];\r\n        }\r\n        if(typeof(infos[date.getMonth()*31+y]) !== \"undefined\") {\r\n            for(let j = 0; j<infos[date.getMonth()*31+y].length; j++)\r\n            if (infos[date.getMonth()*31+y][j][0] === date.getFullYear()) {\r\n                \r\n                event.push(<div id = \"event\" onClick={()=>{instance.togglePopup(infos[date.getMonth()*31+y][j])}} >{infos[date.getMonth()*31+y][j][1]}</div>);\r\n                \r\n            }\r\n            else {\r\n                event = [];\r\n            }\r\n        }\r\n        else {\r\n            event = [];\r\n        }\r\n        if(y===new Date().getDate() && date.getMonth()===new Date().getMonth() && date.getFullYear() === new Date().getFullYear()) {\r\n            \r\n            week.push( <td id=\"today\" class=\"day\">\r\n                    <div id=\"date\" onClick={()=>instance.showDayPopup(\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth())}>{y}</div>\r\n                    <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()}> {event} </div>\r\n                </td>);\r\n        }\r\n        else {\r\n            week.push( <td class=\"day\">\r\n                    <div id=\"date\" onClick={()=>instance.showDayPopup(\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth())}>{y}</div>\r\n                    <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()}> {event} </div>\r\n                </td>);\r\n        }\r\n        event = [];\r\n        i++;\r\n    }\r\n    \r\n    for(let y=1; !(i%7 === 1);y++) {\r\n\r\n        if(typeof(infos[(date.getMonth()+1)*31+y]) !== \"undefined\") {\r\n            for(let j = 0; j<infos[(date.getMonth()+1)*31+y].length; j++)\r\n            if (infos[(date.getMonth()+1)*31+y][j][0] === date.getFullYear()) {\r\n                \r\n                event.push(<div id = \"event\" onClick={()=>{instance.togglePopup(infos[(date.getMonth()+1)*31+y][j])}} >{infos[(date.getMonth()+1)*31+y][j][1]}</div>);\r\n                \r\n            }\r\n            else {\r\n                event = [];\r\n            }\r\n        }\r\n        else {\r\n            event = [];\r\n        }\r\n        \r\n        week.push( <td id=\"other_month\" class=\"day\">\r\n                <div id=\"date\" onClick={()=>instance.showDayPopup(\"y\" + date.getFullYear() + \"d\" + y + \"m\" + (date.getMonth()+1))}>{y}</div>\r\n                <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + (date.getMonth()+1)}> {event} </div>\r\n            </td>);\r\n        event = [];\r\n        i++;\r\n    }\r\n    days.push( <tr id = \"oops\">{week}</tr>);\r\n\r\n    return([days,date]);\r\n\r\n}\r\n\r\nexport function prevMonth(infos, date, instance){\r\n    date.setMonth(date.getMonth()-1);\r\n    return renderCalendar(infos, date, instance);\r\n}\r\n\r\nexport function nextMonth(infos, date, instance){\r\n    date.setMonth(date.getMonth()+1);\r\n    return renderCalendar(infos, date, instance);\r\n}\r\n","C:\\Users\\ashah\\Desktop\\wt2neu\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Filter.jsx",["95","96"],[],"import React from 'react';\r\nimport fetchPruefungen from '../../js/fetch.js'\r\n//import { updateState } from '../landing/Structure.jsx';\r\n\r\nexport default class Filter extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            searchItem: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetchPruefungen(this);\r\n        if(JSON.parse(window.localStorage.getItem('filter'))) {\r\n            var searchItem = window.localStorage.getItem('searchItem');\r\n            if (searchItem === null){\r\n                searchItem = \"\";\r\n            }\r\n            var filter = JSON.parse(window.localStorage.getItem('filter'));\r\n            for(let i = 0; i< filter.length; i++) {\r\n                if (filter[i] === null) {\r\n                    delete filter[i]\r\n                }\r\n            }\r\n            this.state.searchItem = searchItem;\r\n            this.state.aktiveFilter = filter;\r\n            this.props.updateFilterParent(filter, searchItem);\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { error, isLoaded, pruefungen, aktiveFilter} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenHeader = [];\r\n            var pruefungenOptionen = [];\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    pruefungenOptionen[i] = [];\r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    for(let j = 1; j<pruefungenValues.length; j++){\r\n                        if (typeof(pruefungenValues[j]) === \"undefined\"|pruefungenValues[j] === null ) {\r\n                            pruefungenValues[j] = \"\";\r\n                            //console.log(\"Hallo1\")\r\n                        }\r\n                        else if((!pruefungenOptionen[j].some(x => x.trim().toLowerCase() === pruefungenValues[j].trim().toLowerCase()))) {\r\n                            pruefungenOptionen[j].push(\r\n                                pruefungenValues[j].trim()\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for(let i = 1; i<pruefungenOptionen.length; i++) {\r\n                    pruefungenOptionen[i].sort();\r\n                    for(let j = 0; j<pruefungenOptionen[i].length; j++){\r\n                        if (pruefungenOptionen[i][j] === this.state.aktiveFilter[i]) {\r\n                            pruefungenOptionen[i][j] = <option selected>{pruefungenOptionen[i][j]}</option>;\r\n                        }\r\n                        else {\r\n                            pruefungenOptionen[i][j] = <option>{pruefungenOptionen[i][j]}</option>;\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    pruefungenHeader.push(\r\n                    <li>\r\n                        <select style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_select'}\r\n                            onChange={e => {\r\n                                \r\n                                aktiveFilter[i] = e.target.value;\r\n                                if (e.target.value.match(/\\.\\.\\./)) {\r\n                                    delete aktiveFilter[i];\r\n                                }\r\n                                \r\n                            }\r\n                            }>\r\n                                <option style = {{textTransform: \"capitalize\"}} /*selected*/>{pruefungenKeys[i]}...</option>\r\n                                {pruefungenOptionen[i]}\r\n                        </select>\r\n                    </li>);\r\n                }\r\n\r\n            }\r\n\r\n            return(\r\n                <>\r\n                <div id=\"sidebar\" className=\"sidenav\">\r\n                <button className=\"filter_btn\" onClick={()=>FilterScript()}>Filter {'\\u003E'}</button>\r\n                    <ul id=\"sidemenu\">\r\n                        <li><input id=\"search\" type=\"text\" name=\"search\" placeholder=\"Suche...\" defaultValue={this.state.searchItem}>\r\n                            </input></li>\r\n                        <li>\r\n                            <h3 id=\"filterHeader\">Filter</h3>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <button\r\n                            onClick= {\r\n                                ()=> {\r\n                                for(let i = 1; i< pruefungenKeys.length; i++) {\r\n                                    var dropdown = document.getElementById(pruefungenKeys[i]+'_select');\r\n                                    dropdown.selectedIndex = 0;\r\n                                    aktiveFilter[i] = null;\r\n                                }}\r\n                            }>Filter löschen</button>\r\n                        </li>\r\n                        \r\n                        {pruefungenHeader}\r\n                        {/*ToDo: Hier werden die Filteroptionen generiert*/}\r\n\r\n                        <li>\r\n                            <button \r\n                                id = \"search_btn\" \r\n                                type=\"button\"\r\n                                onClick={\r\n                                    ()=>{var searchItem = document.querySelector('#search').value;\r\n                                        window.localStorage.removeItem('searchItem');\r\n                                        window.localStorage.setItem('searchItem', searchItem)\r\n                                        window.localStorage.removeItem('filter');\r\n                                        window.localStorage.setItem('filter', JSON.stringify(this.state.aktiveFilter));\r\n                                        this.props.updateFilterParent(this.state.aktiveFilter, searchItem);\r\n                                        //console.log(this.state.aktiveFilter);\r\n                                    }\r\n                                    \r\n                                }>Filtern</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction FilterScript() {\r\n    const filter_btn = document.querySelector('.filter_btn');\r\n    const filter_menu = document.querySelector('#sidebar');\r\n    const outer_frame = document.querySelector('#outer_frame');\r\n    const checkboxes = document.querySelector('#checkboxes');\r\n    const columns_btn = document.querySelector('.hide_columns');\r\n\r\n    filter_btn.classList.toggle('is-active');\r\n    filter_menu.classList.toggle('is-active');\r\n    outer_frame.classList.toggle('is-active');\r\n    if(checkboxes !== null) {\r\n        checkboxes.classList.toggle('menu-is-active');\r\n        columns_btn.classList.toggle('menu-is-active');\r\n    }\r\n\r\n    filter_btn.childNodes[0].data = filter_btn.childNodes[0].data === \"<\" ? \"Filter >\" : \"<\";\r\n    filter_btn.childNodes[1].data = \"\";\r\n}",{"ruleId":"97","severity":1,"message":"98","line":32,"column":9,"nodeType":"99","messageId":"100","endLine":32,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":33,"column":9,"nodeType":"99","messageId":"100","endLine":33,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":170,"column":33,"nodeType":"99","messageId":"100","endLine":170,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":171,"column":33,"nodeType":"99","messageId":"100","endLine":171,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":183,"column":17,"nodeType":"99","messageId":"100","endLine":183,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":184,"column":17,"nodeType":"99","messageId":"100","endLine":184,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":187,"column":17,"nodeType":"99","messageId":"100","endLine":187,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":189,"column":17,"nodeType":"99","messageId":"100","endLine":189,"endColumn":43},{"ruleId":"97","severity":1,"message":"98","line":192,"column":17,"nodeType":"99","messageId":"100","endLine":192,"endColumn":27},{"ruleId":"97","severity":1,"message":"98","line":203,"column":29,"nodeType":"99","messageId":"100","endLine":203,"endColumn":39},{"ruleId":"97","severity":1,"message":"98","line":214,"column":29,"nodeType":"99","messageId":"100","endLine":214,"endColumn":39},{"ruleId":"101","severity":1,"message":"102","line":172,"column":28,"nodeType":"103","messageId":"104","endLine":172,"endColumn":79},{"ruleId":"97","severity":1,"message":"98","line":204,"column":17,"nodeType":"99","messageId":"100","endLine":204,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":43,"column":55,"nodeType":"107","messageId":"108","endLine":43,"endColumn":135},{"ruleId":"97","severity":1,"message":"98","line":31,"column":13,"nodeType":"99","messageId":"100","endLine":31,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":32,"column":13,"nodeType":"99","messageId":"100","endLine":32,"endColumn":23},"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'x'.","ArrowFunctionExpression","unsafeRefs"]