[{"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\index.js":"1","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\landing\\Index.jsx":"2","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\Kalender.jsx":"3","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\uebersicht\\Uebersicht.jsx":"4","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\Content.jsx":"5","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\Logo.jsx":"6","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\navigation\\Navigation.jsx":"7","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\KalenderContent.jsx":"8","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\navigation\\Filter.jsx":"9","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\navigation\\Hamburger.jsx":"10","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\uebersicht\\UebersichtContent.jsx":"11","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\js\\kalender.js":"12","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\KalenderPopup.jsx":"13","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\KalenderDays.jsx":"14"},{"size":687,"mtime":1651233106392,"results":"15","hashOfConfig":"16"},{"size":941,"mtime":1651233106384,"results":"17","hashOfConfig":"16"},{"size":2118,"mtime":1651512323923,"results":"18","hashOfConfig":"16"},{"size":1727,"mtime":1651233106387,"results":"19","hashOfConfig":"16"},{"size":281,"mtime":1651233106380,"results":"20","hashOfConfig":"16"},{"size":18471,"mtime":1651233106381,"results":"21","hashOfConfig":"16"},{"size":664,"mtime":1651233106386,"results":"22","hashOfConfig":"16"},{"size":11729,"mtime":1651513901697,"results":"23","hashOfConfig":"16"},{"size":6009,"mtime":1651510502869,"results":"24","hashOfConfig":"16"},{"size":444,"mtime":1651233106386,"results":"25","hashOfConfig":"16"},{"size":6928,"mtime":1651499134920,"results":"26","hashOfConfig":"16"},{"size":2637,"mtime":1651498287297,"results":"27","hashOfConfig":"16"},{"size":1076,"mtime":1651515787000,"results":"28","hashOfConfig":"16"},{"size":3557,"mtime":1651506315545,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"utaa4u",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\index.js",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\landing\\Index.jsx",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\Kalender.jsx",["78","79"],[],"import '../../css/general.css';\r\nimport '../../css/header.css';\r\nimport '../../css/kalender.css';\r\nimport Logo from '../Logo.jsx';\r\nimport Navigation from '../navigation/Navigation';\r\nimport Hamburger from '../navigation/Hamburger.jsx';\r\nimport Content from '../Content.jsx';\r\nimport Filter from '../navigation/Filter.jsx';\r\nimport KalenderContent from './KalenderContent.jsx'\r\nimport React from 'react';\r\nimport {renderCalendar} from '../../js/kalender';\r\n\r\nexport function updateState(aktiveFilter, searchItem){\r\n    this.setState({aktiveFilter, searchItem});\r\n    var calendar = this.renderCalendar(this.state.pruefungenInfos, this.state.date)[0]\r\n    this.setState({calendar});\r\n    this.setState({aktiveFilter, searchItem});\r\n    var calendar = this.renderCalendar(this.state.pruefungenInfos, this.state.date)[0]\r\n    this.setState({calendar});\r\n    //this.renderCalendar(this.state.pruefungenInfos, this.state.date);\r\n    \r\n}\r\n\r\nexport default class Kalender extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {aktiveFilter: [], searchItem: ''}\r\n        this.updateFilter = this.updateFilter\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        renderCalendar();\r\n    }\r\n\r\n    updateFilter = (aktiveFilter, searchItem) => {\r\n        this.setState({aktiveFilter, searchItem}); \r\n        //console.log(this.state.searchItem);\r\n        this.updateStateChild(aktiveFilter, searchItem)\r\n    }\r\n    updateStateChild(aktiveFilter, searchItem) {updateState(aktiveFilter, searchItem)}\r\n\r\n    render() {\r\n        return (    \r\n        \r\n            <>\r\n            <div id=\"topbar\" className=\"topnav\">\r\n\r\n                <a href=\"/\">\r\n                   <Logo name=\"logo\"/>\r\n                </a>\r\n\r\n                <Navigation type=\"top\"/>\r\n\r\n                <Hamburger/>\r\n\r\n            </div>\r\n            <div id=\"mobilebar\" className=\"sidenav\">\r\n                <Navigation type=\"mob\"/>\r\n            </div>\r\n            <Filter updateFilterParent = {this.updateFilter}/>\r\n            <Content content = {<KalenderContent/>}/>\r\n            \r\n            </>\r\n        );\r\n    }\r\n}","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\uebersicht\\Uebersicht.jsx",["80","81"],[],"import '../../css/general.css';\r\nimport '../../css/header.css';\r\nimport '../../css/uebersicht.css';\r\nimport Logo from '../Logo.jsx';\r\nimport Navigation from '../navigation/Navigation.jsx';\r\nimport Hamburger from '../navigation/Hamburger.jsx';\r\nimport Content from '../Content.jsx';\r\nimport Filter from '../navigation/Filter.jsx';\r\nimport UebersichtContent, {hideShowTable} from './UebersichtContent.jsx'\r\nimport React from 'react';\r\n\r\n\r\nexport function updateState(aktiveFilter, searchItem){\r\n    this.setState({aktiveFilter, searchItem})\r\n}\r\n\r\nexport default class Uebersicht extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {aktiveFilter: [], searchItem: ''}\r\n        this.updateFilter = this.updateFilter\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        //hideShowTable();\r\n    }\r\n\r\n    updateFilter = (aktiveFilter, searchItem) => {\r\n        this.setState({aktiveFilter, searchItem}); \r\n        //console.log(this.state.searchItem);\r\n        this.updateStateChild(aktiveFilter, searchItem)\r\n    }\r\n    updateStateChild(aktiveFilter, searchItem) {updateState(aktiveFilter, searchItem)}\r\n\r\n    render() {\r\n\r\n        return (    \r\n            \r\n            <>\r\n            <div id=\"topbar\" className=\"topnav\">\r\n\r\n                <a href=\"/\">\r\n                    <Logo name=\"logo\"/>\r\n                </a>\r\n\r\n                <Navigation type=\"top\"/>\r\n\r\n                <Hamburger/>\r\n\r\n            </div>\r\n            <div id=\"mobilebar\" className=\"sidenav\">\r\n                <Navigation type=\"mob\"/>\r\n            </div>\r\n            <Filter updateFilterParent = {this.updateFilter}/>\r\n            <Content content = {<UebersichtContent/>}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\Content.jsx",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\Logo.jsx",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\navigation\\Navigation.jsx",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\KalenderContent.jsx",["82","83","84","85","86"],[],"\r\nimport React from 'react';\r\n//import { renderCalendar } from '../../js/kalender';\r\n//import {prevMonth, nextMonth, renderCalendar} from './KalenderDays';\r\nimport { updateState } from './Kalender';\r\nimport KalenderPopup from './KalenderPopup';\r\n\r\n\r\n\r\n\r\nexport default class KalenderContent extends React.Component{\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            pruefungPopup: false,\r\n            searchItem: '',\r\n            pruefungenInfos: [],\r\n            calendar: [],\r\n            date: \"\",\r\n            infoName:\"\"\r\n        };\r\n        updateState = updateState.bind(this);\r\n        //updateState = () => {updateState(); renderCalendar(this.state.pruefungenInfos, this.state.date)}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderCalendar(infos, date) {\r\n\r\n        //console.log(\"function renderCalendar started\");\r\n        //console.log(typeof(infos));\r\n        //console.log(infos[1]);\r\n    \r\n        const month = date.getMonth();\r\n        const lastDay = new Date(date.getFullYear(), date.getMonth()+1,0).getDate();\r\n    \r\n        date.setDate(1);\r\n        const firstDayIndex = date.getDay();\r\n        const lastMonthDays = new Date(date.getFullYear(), date.getMonth(),0).getDate();\r\n    \r\n        const months = [\r\n            \"Januar\",\r\n            \"Februar\",\r\n            \"März\",\r\n            \"April\",\r\n            \"Mai\",\r\n            \"Juni\",\r\n            \"Juli\",\r\n            \"August\",\r\n            \"September\",\r\n            \"Oktober\",\r\n            \"November\",\r\n            \"Dezember\"\r\n        ];\r\n    \r\n        document.querySelector(\"#cur_month\").innerHTML \r\n        = months[month];\r\n    \r\n        document.querySelector(\"#cur_year\").innerHTML \r\n        = \"<p>\" + date.getFullYear() + \"</p>\";\r\n    \r\n        let days = [];\r\n    \r\n        let i = 1;\r\n        let week = [];\r\n        let event = [];\r\n    \r\n    \r\n        for(let x=firstDayIndex-1; x!==0; x--) {\r\n            \r\n            if (x===-1) {\r\n                x=6;\r\n            }\r\n            week.push( <td id=\"other_month\" class=\"day\">\r\n                    <div id=\"date\">{lastMonthDays-x+1}</div>\r\n                    <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + lastMonthDays-x+1 + \"m\" + date.getMonth()-1}>  </div>\r\n                </td>);\r\n            i++;\r\n        }\r\n    \r\n        \r\n    \r\n        for(let y=1; y<=lastDay;y++) {\r\n            \r\n            \r\n            if (i%7 === 1) {\r\n                days.push(<tr>{week}</tr>);\r\n                week = [];\r\n            }\r\n            if(typeof(infos[date.getMonth()*31+y]) !== \"undefined\") {\r\n                for(let j = 0; j<infos[date.getMonth()*31+y].length; j++)\r\n                if (infos[date.getMonth()*31+y][j][0] === date.getFullYear()) {\r\n                    \r\n                    event.push(<div onClick={()=>{this.togglePopup(infos[date.getMonth()*31+y][j][1])}} >{infos[date.getMonth()*31+y][j][1]}</div>);\r\n                    \r\n                }\r\n                else {\r\n                    event = [];\r\n                }\r\n            }\r\n            else {\r\n                event = [];\r\n            }\r\n            if(y===new Date().getDate() && date.getMonth()===new Date().getMonth() && date.getFullYear() === new Date().getFullYear()) {\r\n                \r\n                week.push( <td id=\"today\" class=\"day\">\r\n                        <div id=\"date\">{y}</div>\r\n                        <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()}> {event} </div>\r\n                    </td>);\r\n            }\r\n            else {\r\n                week.push( <td class=\"day\">\r\n                        <div id=\"date\">{y}</div>\r\n                        <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()}> {event} </div>\r\n                    </td>);\r\n            }\r\n            event = [];\r\n            i++;\r\n        }\r\n        \r\n        for(let y=1; !(i%7 === 1);y++) {\r\n            \r\n            week.push( <td id=\"other_month\" class=\"day\">\r\n                    <div id=\"date\">{y}</div>\r\n                    <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()+1}>  </div>\r\n                </td>);\r\n            i++;\r\n        }\r\n        days.push( <tr id = \"oops\">{week}</tr>);\r\n    \r\n        //console.log(typeof(days));\r\n        return([days, date]);\r\n        \r\n        //monthDays.innerHTML = days;\r\n    \r\n    }\r\n    \r\n    prevMonth(infos, date){\r\n        //console.log(date.getMonth());\r\n        date.setMonth(date.getMonth()-1);\r\n        return this.renderCalendar(infos, date);\r\n    }\r\n    \r\n    nextMonth(infos, date){\r\n        date.setMonth(date.getMonth()+1);\r\n        return this.renderCalendar(infos, date);\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    togglePopup(name) {\r\n        this.setState({\r\n            infoName: name,\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(typeof(this.state.pruefungenInfos));\r\n        //console.log(this.state.pruefungenInfos[0]);\r\n        if (this.state.date === \"\") { this.state.date = new Date();}\r\n        fetch(\"http://localhost:8000/api/liste/\",{\r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        \r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    pruefungen: result,\r\n                    \r\n                    calendar: this.renderCalendar(this.state.pruefungenInfos, this.state.date)[0]\r\n                    \r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        );\r\n            \r\n    }\r\n\r\n    render() {\r\n\r\n\r\n       const { error, isLoaded, pruefungen} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenHeader = [];\r\n            var pruefungenInfos1 = [];\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    \r\n                        pruefungenHeader.push(\r\n                        <td style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_col_head'}>\r\n                                <b>{pruefungenKeys[i]}</b>\r\n                        </td>);\r\n                    \r\n                                    \r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    \r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    let filteredOut = false;\r\n                    let containsSearch = false\r\n\r\n                    \r\n\r\n                    if (!(pruefungenValues[5] == null)) {\r\n\r\n                        let pruefungDatum = pruefungenValues[5].split('-');\r\n                        pruefungDatum[1] = parseInt(pruefungDatum[1]);\r\n                        if (typeof pruefungDatum[2] === 'string') {\r\n                            pruefungDatum[2] = parseInt(pruefungDatum[2].split(' ')[0]);\r\n                        }\r\n                        \r\n                        for(let j = 1; j<pruefungenValues.length; j++){\r\n                                                \r\n                            if(typeof(this.state.aktiveFilter[j])!=\"undefined\"&&this.state.aktiveFilter[j]!=pruefungenValues[j]){\r\n                                filteredOut = true;\r\n                            }\r\n                            if(pruefungenValues[j]==null){\r\n                                pruefungenValues[j]=\"\"\r\n                            }\r\n                            if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLocaleLowerCase())){\r\n                                containsSearch = true;\r\n                            }\r\n                        }\r\n                        pruefungenInfos1[0] = \"test\";\r\n                        if(!filteredOut&&containsSearch) {\r\n                            if (typeof(pruefungenInfos1[(pruefungDatum[1]-1)*31 + pruefungDatum[2]]) === \"undefined\") {\r\n                                pruefungenInfos1[(pruefungDatum[1]-1)*31 + pruefungDatum[2]] = [];\r\n                            }\r\n                            if (!pruefungenInfos1[(pruefungDatum[1]-1)*31 + pruefungDatum[2]].includes([parseInt(pruefungDatum[0]), pruefungenValues[3]])){\r\n                                pruefungenInfos1[(pruefungDatum[1]-1)*31 + pruefungDatum[2]].push([parseInt(pruefungDatum[0]), pruefungenValues[3]]);\r\n                            }\r\n                            //console.log((pruefungDatum[1]-1)*31 + pruefungDatum[2]);\r\n                        }\r\n                    }   \r\n                }\r\n            }  \r\n            pruefungenInfos1[0] = \"test\";\r\n            pruefungenInfos1[1] = [2022, \"yay\"];\r\n            //console.log(pruefungenInfos1[0]);\r\n            this.state.pruefungenInfos = pruefungenInfos1;\r\n        }\r\n\r\n        \r\n\r\n    \r\n        return(\r\n            <>\r\n            <table id = \"month\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"prev\" onClick={()=>{\r\n                            this.state.calendar = this.prevMonth(this.state.pruefungenInfos, this.state.date)[0]; \r\n                            updateState(this.state.aktiveFilter, this.state.searchItem);\r\n                            \r\n                            }}>\r\n                        {'\\u276E'}\r\n                        </td>\r\n                        \r\n                        <td id = \"cur_month\">\r\n                            A\r\n                        </td>\r\n                        \r\n                        <td className=\"next\" onClick={()=>{\r\n                            this.state.calendar = this.nextMonth(this.state.pruefungenInfos, this.state.date)[0]; \r\n                            updateState(this.state.aktiveFilter, this.state.searchItem);\r\n                            }}>\r\n                            {'\\u276F'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td id = \"cur_year\">\r\n                            <p>2022</p>\r\n                        </td>\r\n                        <td></td>\r\n                        \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <table id = \"calendar_table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mo</th>\r\n                        <th>Di</th>\r\n                        <th>Mi</th>\r\n                        <th>Do</th>\r\n                        <th>Fr</th>\r\n                        <th>Sa</th>\r\n                        <th>So</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = \"days\">\r\n                    {this.state.calendar}\r\n                    {/*Hier wird der Kalender generiert*/}\r\n                    {/*ToDo: Füllen der content divs mit Terminen*/}\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n            {this.state.showPopup ? \r\n            <KalenderPopup\r\n                categories={pruefungenHeader}\r\n                name={this.state.infoName}\r\n                closePopup={this.togglePopup.bind(this)}\r\n            />\r\n            : null\r\n            }\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\navigation\\Filter.jsx",["87","88"],[],"import React from 'react';\r\n\r\nexport default class Filter extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n        };\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8000/api/liste/\",{\r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        \r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    pruefungen: result,\r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const { error, isLoaded, pruefungen, aktiveFilter} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenHeader = [];\r\n            var pruefungenOptionen = [];\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    pruefungenOptionen[i] = new Array();\r\n                    //pruefungenOptionen[i].push(<option>Kein Filter</option>)\r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    for(let j = 1; j<pruefungenValues.length; j++){\r\n                        if (pruefungenValues[j] === null) {\r\n                            pruefungenValues[j] = \"\";\r\n                        }\r\n                        if((!pruefungenOptionen[j].some(x => x.trim().toLowerCase() == pruefungenValues[j].trim().toLowerCase()))\r\n                            /*&& (!pruefungenOptionen[j].toString().trim() == \"\")\r\n                            && (!pruefungenOptionen[j] == null)*/) {\r\n                            pruefungenOptionen[j].push(\r\n                                pruefungenValues[j].trim()\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                for(let i = 1; i<pruefungenOptionen.length; i++) {\r\n                    pruefungenOptionen[i].sort();\r\n                    for(let j = 0; j<pruefungenOptionen[i].length; j++){\r\n                        pruefungenOptionen[i][j] = <option>{pruefungenOptionen[i][j]}</option>;\r\n                    }\r\n                    \r\n                }\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    pruefungenHeader.push(\r\n                    <li>\r\n                        <select style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_select'}\r\n                            onChange={e => {\r\n                                \r\n                                aktiveFilter[i] = e.target.value;\r\n                                if (e.target.value.match(/\\.\\.\\./)) {\r\n                                    delete aktiveFilter[i];\r\n                                }\r\n                                \r\n                            }\r\n                            }>\r\n                                <option style = {{textTransform: \"capitalize\"}} selected>{pruefungenKeys[i]}...</option>\r\n                                {pruefungenOptionen[i]}\r\n                        </select>\r\n                    </li>);\r\n                }\r\n\r\n            }\r\n\r\n            return(\r\n                <>\r\n                <div id=\"sidebar\" className=\"sidenav\">\r\n                <button className=\"filter_btn\" onClick={()=>FilterScript()}>Filter {'\\u003E'}</button>\r\n                    <ul id=\"sidemenu\">\r\n                        <li><input id=\"search\" type=\"text\" name=\"search\" placeholder=\"Suche...\"/></li>\r\n                        <li>\r\n                            <h3 id=\"filterHeader\">Filter</h3>\r\n                        </li>\r\n                        \r\n                        {pruefungenHeader}\r\n                        {/*ToDo: Hier werden die Filteroptionen generiert*/}\r\n\r\n                        <li>\r\n                            <button \r\n                                id = \"search_btn\" \r\n                                type=\"button\"\r\n                                onClick={\r\n                                    ()=>{var searchItem = document.querySelector('#search').value;\r\n                                        this.props.updateFilterParent(this.state.aktiveFilter, searchItem);\r\n                                        //console.log(document.querySelector('#search').value);\r\n                                        //console.log(aktiveFilter);\r\n                                    }\r\n                                    \r\n                                }>Filtern</button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction FilterScript() {\r\n    const filter_btn = document.querySelector('.filter_btn');\r\n    const filter_menu = document.querySelector('#sidebar');\r\n    const outer_frame = document.querySelector('#outer_frame');\r\n    const checkboxes = document.querySelector('#checkboxes');\r\n    const columns_btn = document.querySelector('.hide_columns');\r\n\r\n    filter_btn.classList.toggle('is-active');\r\n    filter_menu.classList.toggle('is-active');\r\n    outer_frame.classList.toggle('is-active');\r\n    if(checkboxes !== null) {\r\n        checkboxes.classList.toggle('menu-is-active');\r\n        columns_btn.classList.toggle('menu-is-active');\r\n    }\r\n\r\n    filter_btn.childNodes[0].data = filter_btn.childNodes[0].data === \"<\" ? \"Filter >\" : \"<\";\r\n    filter_btn.childNodes[1].data = \"\";\r\n}","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\navigation\\Hamburger.jsx",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\uebersicht\\UebersichtContent.jsx",["89","90"],[],"import React from 'react';\r\nimport { updateState } from './Uebersicht';\r\n\r\nfunction SpaltenScript() {\r\n    const columns_btn = document.querySelector('.hide_columns');\r\n    const checkboxes = document.querySelector('#checkboxes');\r\n    const outer_frame = document.querySelector('#outer_frame');\r\n\r\n    columns_btn.classList.toggle('is-active');\r\n    checkboxes.classList.toggle('is-active');\r\n    outer_frame.classList.toggle('spalten-is-active');\r\n\r\n    columns_btn.firstChild.data = columns_btn.firstChild.data === \"<\" ? \"Spalten >\" : \"<\";\r\n    columns_btn.childNodes[1].data = \"\";\r\n}\r\n\r\nexport default class KalenderContent extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            hiddenColumns: [true,true,null,null,null,null,true,true,true,true,null],\r\n            searchItem: ''\r\n        };\r\n        updateState = updateState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8000/api/liste/\",{\r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        \r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    pruefungen: result,\r\n                    \r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        );\r\n    }\r\n    \r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const { error, isLoaded, pruefungen, hiddenColumns} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenListe = [];\r\n            var pruefungenHeader = [];\r\n            var spaltenFilter = [];\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n                let x = 0;\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    if (!hiddenColumns[i]){\r\n                        pruefungenHeader.push(\r\n                        <td style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_col_head'}>\r\n                                <b>{pruefungenKeys[i]}</b>\r\n                        </td>);\r\n                    }\r\n                    spaltenFilter.push(\r\n                    <li>\r\n                        <input type=\"checkbox\" \r\n                            className=\"show\" \r\n                            id={pruefungenKeys[i]+\"_col\"} \r\n                            onChange={()=> {\r\n                                var col_name = pruefungenKeys[i]+\"_col\";\r\n                                var checkbox_val=document.getElementById(col_name).className;\r\n                                if(!hiddenColumns[i] )\r\n                                {   \r\n                                    hiddenColumns[i] = true;\r\n                                    this.setState({hiddenColumns});\r\n                                }\r\n\r\n                                else\r\n                                {\r\n                                    hiddenColumns[i] = null;\r\n                                    this.setState({hiddenColumns});\r\n                                }\r\n                            }\r\n                            } \r\n                            defaultChecked={!hiddenColumns[i]}/>\r\n                        <label style = {{textTransform: \"capitalize\"}}>{pruefungenKeys[i]}</label>\r\n                    </li>);\r\n                    \r\n                \r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    var pruefungenInstance = [];\r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    let filteredOut = false;\r\n                    let containsSearch = false\r\n            \r\n                    for(let j = 1; j<pruefungenValues.length; j++){\r\n                        \r\n                        if(!hiddenColumns[j]) {\r\n                            pruefungenInstance.push(<td className = {pruefungenKeys[j]+'_col'}>{pruefungenValues[j]}</td>);\r\n                        }\r\n                        \r\n                        if(this.state.aktiveFilter[j]!==undefined&&this.state.aktiveFilter[j]!=pruefungenValues[j]){\r\n                            filteredOut = true;\r\n                        }\r\n                        if(pruefungenValues[j]==null){\r\n                            pruefungenValues[j]=\"Abdo\"\r\n                        }\r\n                        if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLocaleLowerCase())){\r\n                            containsSearch = true;\r\n                        }\r\n                    }\r\n                    \r\n                    if(!filteredOut&&containsSearch) {\r\n                        if(x%2===1){\r\n                            pruefungenListe.push(<tr className = 'second'>{pruefungenInstance}</tr>)\r\n                        } else {\r\n                            pruefungenListe.push(<tr>{pruefungenInstance}</tr>)\r\n                        }\r\n                        x++;\r\n                    }\r\n                }\r\n\r\n                console.log(typeof(pruefungenListe));\r\n                \r\n            }  \r\n            \r\n            \r\n\r\n            return(\r\n                <>\r\n                <button className=\"hide_columns\" onClick={()=>SpaltenScript()}>Spalte {'\\u003E'}</button>\r\n                <div id=\"checkboxes\" className = \"sidenav\">\r\n                    <ul>\r\n                        <li>\r\n                            <h3 id=\"spaltenHeader\">Spalten</h3>\r\n                        </li>\r\n                        {spaltenFilter}\r\n                        {/*Hier werden die Spaltenfilter generiert*/}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id = \"ov_content\">\r\n                    <h3 id = \"header_overview\">Übersicht</h3>\r\n\r\n                    <table id = \"overview_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {pruefungenHeader}\r\n                                {/*ToDo: Hier werden die Spaltennamen generiert*/}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/*<tr>{this.state.aktiveFilter}</tr>}\r\n                            {<tr>{this.state.searchItem}</tr>*/}\r\n                            {pruefungenListe}\r\n                            {/*rows*/}\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>  \r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\js\\kalender.js",["91"],[],"const date = new Date();\r\n\r\nexport function renderCalendar() {\r\n\r\n    console.log(\"function renderCalendar started\");\r\n\r\n    const month = date.getMonth();\r\n    const monthDays = document.querySelector(\"#days\");\r\n    const lastDay = new Date(date.getFullYear(), date.getMonth()+1,0).getDate();\r\n\r\n    date.setDate(1);\r\n    const firstDayIndex = date.getDay();\r\n    const lastMonthDays = new Date(date.getFullYear(), date.getMonth(),0).getDate();\r\n\r\n    const months = [\r\n        \"Januar\",\r\n        \"Februar\",\r\n        \"März\",\r\n        \"April\",\r\n        \"Mai\",\r\n        \"Juni\",\r\n        \"Juli\",\r\n        \"August\",\r\n        \"September\",\r\n        \"Oktober\",\r\n        \"November\",\r\n        \"Dezember\"\r\n    ];\r\n\r\n    document.querySelector(\"#cur_month\").innerHTML \r\n    = months[month];\r\n\r\n    document.querySelector(\"#cur_year\").innerHTML \r\n    = \"<p>\" + date.getFullYear() + \"</p>\";\r\n\r\n    let days = [];\r\n\r\n    let i = 1;\r\n\r\n\r\n\r\n    for(let x=firstDayIndex-1; x!==0; x--) {\r\n        if (x===-1) {\r\n            x=6;\r\n        }\r\n        if (i===1) {\r\n            days.push( '<tr>');\r\n        }\r\n        else if (i%7 === 1) {\r\n            days.push( '</tr><tr>');\r\n        }\r\n        days.push( `<td id=\"other_month\" class=\"day\"><div id=\"date\">${lastMonthDays-x+1}</div><div id=\"content\" class = \"y${date.getFullYear()} d${lastMonthDays-x+1} m${date.getMonth()-1}\">  </div></td>`);\r\n        i++;\r\n    }\r\n\r\n    for(let y=1; y<=lastDay;y++) {\r\n        if (i===1) {\r\n            days.push( '<tr>');\r\n        }\r\n        else if (i%7 === 1) {\r\n            days.push( '</tr><tr>');\r\n        }\r\n        if(y===new Date().getDate() && date.getMonth()===new Date().getMonth() && date.getFullYear() === new Date().getFullYear()) {\r\n            days.push( `<td id=\"today\" class=\"day\"><div id=\"date\">${y}</div><div id=\"content\" class = \"y${date.getFullYear()} d${y} m${date.getMonth()}\">  </div></td>`);\r\n        }\r\n        else {\r\n            days.push( `<td class=\"day\"><div id=\"date\">${y}</div><div id=\"content\" class = \"y${date.getFullYear()} d${y} m${date.getMonth()}\">  </div></td>`);\r\n        }\r\n        i++;\r\n    }\r\n\r\n    for(let y=1; !(i%7 === 1);y++) {\r\n        \r\n        days.push( `<td id=\"other_month\" class=\"day\"><div id=\"date\">${y}</div><div id=\"content\" class = \"y${date.getFullYear()} d${y} m${date.getMonth()+1}\" >  </div></td>`);\r\n        i++;\r\n    }\r\n    days.push( '</tr>');\r\n\r\n    return(days);\r\n    //monthDays.innerHTML = days;\r\n\r\n}\r\n\r\n\r\nexport function prevMonth(){\r\n    date.setMonth(date.getMonth()-1);\r\n    renderCalendar();\r\n}\r\n\r\nexport function nextMonth(){\r\n    date.setMonth(date.getMonth()+1);\r\n    renderCalendar();\r\n}\r\n","C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\KalenderPopup.jsx",[],[],"C:\\Users\\Malte\\Desktop\\Uni\\WT2\\Koelender git\\koelender\\frontend\\src\\components\\kalender\\KalenderDays.jsx",[],[],{"ruleId":"92","severity":1,"message":"93","line":18,"column":9,"nodeType":"94","messageId":"95","endLine":18,"endColumn":17},{"ruleId":"96","severity":1,"message":"97","line":29,"column":29,"nodeType":"98","messageId":"99","endLine":29,"endColumn":46},{"ruleId":"100","severity":1,"message":"101","line":9,"column":28,"nodeType":"94","messageId":"102","endLine":9,"endColumn":41},{"ruleId":"96","severity":1,"message":"97","line":21,"column":29,"nodeType":"98","messageId":"99","endLine":21,"endColumn":46},{"ruleId":"103","severity":1,"message":"104","line":177,"column":39,"nodeType":"98","messageId":"105","endLine":177,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":251,"column":107,"nodeType":"108","messageId":"109","endLine":251,"endColumn":109},{"ruleId":"103","severity":1,"message":"104","line":277,"column":13,"nodeType":"98","messageId":"105","endLine":277,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":289,"column":29,"nodeType":"98","messageId":"105","endLine":289,"endColumn":39},{"ruleId":"103","severity":1,"message":"104","line":301,"column":29,"nodeType":"98","messageId":"105","endLine":301,"endColumn":39},{"ruleId":"110","severity":1,"message":"111","line":60,"column":45,"nodeType":"112","messageId":"113","endLine":60,"endColumn":56},{"ruleId":"106","severity":1,"message":"114","line":70,"column":85,"nodeType":"108","messageId":"109","endLine":70,"endColumn":87},{"ruleId":"100","severity":1,"message":"115","line":93,"column":37,"nodeType":"94","messageId":"102","endLine":93,"endColumn":49},{"ruleId":"106","severity":1,"message":"107","line":126,"column":94,"nodeType":"108","messageId":"109","endLine":126,"endColumn":96},{"ruleId":"100","severity":1,"message":"116","line":8,"column":11,"nodeType":"94","messageId":"102","endLine":8,"endColumn":20},"no-redeclare","'calendar' is already defined.","Identifier","redeclared","no-self-assign","'this.updateFilter' is assigned to itself.","MemberExpression","selfAssignment","no-unused-vars","'hideShowTable' is defined but never used.","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","Expected '===' and instead saw '=='.","'checkbox_val' is assigned a value but never used.","'monthDays' is assigned a value but never used."]