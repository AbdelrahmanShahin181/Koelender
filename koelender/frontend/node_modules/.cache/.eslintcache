[{"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\index.js":"1","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\Routing.jsx":"2","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\Logo.jsx":"3","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\landing\\Structure.jsx":"4","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderContent.jsx":"5","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\uebersicht\\UebersichtContent.jsx":"6","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\Content.jsx":"7","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Navigation.jsx":"8","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Hamburger.jsx":"9","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Filter.jsx":"10","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderPopup.jsx":"11"},{"size":223,"mtime":1651742041267,"results":"12","hashOfConfig":"13"},{"size":2208,"mtime":1651742041250,"results":"14","hashOfConfig":"13"},{"size":18471,"mtime":1650450178205,"results":"15","hashOfConfig":"13"},{"size":2010,"mtime":1651742041258,"results":"16","hashOfConfig":"13"},{"size":12484,"mtime":1651742041252,"results":"17","hashOfConfig":"13"},{"size":6974,"mtime":1651742041261,"results":"18","hashOfConfig":"13"},{"size":281,"mtime":1650447976444,"results":"19","hashOfConfig":"13"},{"size":664,"mtime":1650447976449,"results":"20","hashOfConfig":"13"},{"size":444,"mtime":1650447976449,"results":"21","hashOfConfig":"13"},{"size":6220,"mtime":1652122913261,"results":"22","hashOfConfig":"13"},{"size":1002,"mtime":1651742041257,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h9ubha",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\index.js",[],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\Routing.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\Logo.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\landing\\Structure.jsx",["60"],[],"import '../../css/general.css';\r\nimport '../../css/header.css';\r\nimport '../../css/landing.css';\r\nimport Logo from '../Logo.jsx';\r\nimport Filter from '../navigation/Filter'\r\nimport Navigation from '../navigation/Navigation.jsx';\r\nimport Hamburger from '../navigation/Hamburger.jsx';\r\nimport Content from '../Content.jsx';\r\nimport React from 'react';\r\n\r\n\r\nexport function updateState(aktiveFilter, searchItem){\r\n    this.setState({aktiveFilter, searchItem});\r\n    //console.log(typeof(renderCalendar));\r\n    //var calendar = this.renderCalendar(this.state.pruefungenInfos, this.state.date)[0]\r\n    //this.setState({calendar});\r\n}\r\n\r\nexport default class Structure extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            aktiveFilter: [], \r\n            searchItem: '',\r\n            stylePath: process.env.PUBLIC_URL + '/static/css/color.css'\r\n        }\r\n        this.updateFilter = this.updateFilter\r\n        \r\n    }\r\n\r\n    updateFilter = (aktiveFilter, searchItem) => {\r\n        this.setState({aktiveFilter, searchItem}); \r\n        //console.log(this.state.searchItem);\r\n        this.updateStateChild(aktiveFilter, searchItem)\r\n    }\r\n    updateStateChild(aktiveFilter, searchItem) {updateState(aktiveFilter, searchItem)}\r\n\r\n    render() {\r\n        var filter = <></>;\r\n        if(this.props.filter) {\r\n            filter = <Filter updateFilterParent = {this.updateFilter}/>;\r\n        }\r\n        \r\n\r\n        return (    \r\n            \r\n            <>\r\n            <div id=\"topbar\" className=\"topnav\">\r\n\r\n                <a href=\"/\">\r\n                    <Logo name=\"logo\"/>\r\n                </a>\r\n\r\n                <Navigation type=\"top\"/>\r\n\r\n                <Hamburger/>\r\n\r\n            </div>\r\n            <div id=\"mobilebar\" className=\"sidenav\">\r\n                <Navigation type=\"mob\"/>\r\n            </div>\r\n            \r\n            {filter}\r\n            <Content content = {this.props.content}/>\r\n            \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderContent.jsx",["61","62","63","64","65"],[],"\r\nimport React from 'react';\r\nimport { updateState } from '../landing/Structure';\r\nimport KalenderPopup from './KalenderPopup';\r\nimport '../../css/kalender.css';\r\n\r\n\r\n\r\n\r\nexport default class KalenderContent extends React.Component{\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            pruefungPopup: false,\r\n            searchItem: '',\r\n            pruefungenInfos: [],\r\n            calendar: [],\r\n            date: \"\",\r\n            infos:[]\r\n        };\r\n        updateState = updateState.bind(this);\r\n        //updateState = () => {updateState(); renderCalendar(this.state.pruefungenInfos, this.state.date)}\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    renderCalendar(infos, date) {\r\n\r\n        //console.log(\"function renderCalendar started\");\r\n        //console.log(typeof(infos));\r\n        //console.log(infos[1]);\r\n    \r\n        const month = date.getMonth();\r\n        const lastDay = new Date(date.getFullYear(), date.getMonth()+1,0).getDate();\r\n    \r\n        date.setDate(1);\r\n        const firstDayIndex = date.getDay();\r\n        const lastMonthDays = new Date(date.getFullYear(), date.getMonth(),0).getDate();\r\n    \r\n        const months = [\r\n            \"Januar\",\r\n            \"Februar\",\r\n            \"MÃ¤rz\",\r\n            \"April\",\r\n            \"Mai\",\r\n            \"Juni\",\r\n            \"Juli\",\r\n            \"August\",\r\n            \"September\",\r\n            \"Oktober\",\r\n            \"November\",\r\n            \"Dezember\"\r\n        ];\r\n    \r\n        document.querySelector(\"#cur_month\").innerHTML \r\n        = months[month];\r\n    \r\n        document.querySelector(\"#cur_year\").innerHTML \r\n        = \"<p>\" + date.getFullYear() + \"</p>\";\r\n    \r\n        let days = [];\r\n    \r\n        let i = 1;\r\n        let week = [];\r\n        let event = [];\r\n    \r\n    \r\n        for(let x=firstDayIndex-1; x!==0; x--) {\r\n            \r\n            if (x===-1) {\r\n                x=6;\r\n            }\r\n            week.push( <td id=\"other_month\" class=\"day\">\r\n                    <div id=\"date\">{lastMonthDays-x+1}</div>\r\n                    <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + lastMonthDays-x+1 + \"m\" + date.getMonth()-1}>  </div>\r\n                </td>);\r\n            i++;\r\n        }\r\n    \r\n        \r\n    \r\n        for(let y=1; y<=lastDay;y++) {\r\n            \r\n            \r\n            if (i%7 === 1) {\r\n                days.push(<tr>{week}</tr>);\r\n                week = [];\r\n            }\r\n            if(typeof(infos[date.getMonth()*31+y]) !== \"undefined\") {\r\n                for(let j = 0; j<infos[date.getMonth()*31+y].length; j++)\r\n                if (infos[date.getMonth()*31+y][j][0] === date.getFullYear()) {\r\n                    \r\n                    event.push(<div onClick={()=>{this.togglePopup(infos[date.getMonth()*31+y][j])}} >{infos[date.getMonth()*31+y][j][1]}</div>);\r\n                    \r\n                }\r\n                else {\r\n                    event = [];\r\n                }\r\n            }\r\n            else {\r\n                event = [];\r\n            }\r\n            if(y===new Date().getDate() && date.getMonth()===new Date().getMonth() && date.getFullYear() === new Date().getFullYear()) {\r\n                \r\n                week.push( <td id=\"today\" class=\"day\">\r\n                        <div id=\"date\">{y}</div>\r\n                        <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()}> {event} </div>\r\n                    </td>);\r\n            }\r\n            else {\r\n                week.push( <td class=\"day\">\r\n                        <div id=\"date\">{y}</div>\r\n                        <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()}> {event} </div>\r\n                    </td>);\r\n            }\r\n            event = [];\r\n            i++;\r\n        }\r\n        \r\n        for(let y=1; !(i%7 === 1);y++) {\r\n            \r\n            week.push( <td id=\"other_month\" class=\"day\">\r\n                    <div id=\"date\">{y}</div>\r\n                    <div id=\"content\" class = {\"y\" + date.getFullYear() + \"d\" + y + \"m\" + date.getMonth()+1}>  </div>\r\n                </td>);\r\n            i++;\r\n        }\r\n        days.push( <tr id = \"oops\">{week}</tr>);\r\n    \r\n        //console.log(typeof(days));\r\n        return([days, date]);\r\n        \r\n        //monthDays.innerHTML = days;\r\n    \r\n    }\r\n    \r\n    prevMonth(infos, date){\r\n        //console.log(date.getMonth());\r\n        date.setMonth(date.getMonth()-1);\r\n        return this.renderCalendar(infos, date);\r\n    }\r\n    \r\n    nextMonth(infos, date){\r\n        date.setMonth(date.getMonth()+1);\r\n        return this.renderCalendar(infos, date);\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    togglePopup(infos) {\r\n        this.setState({\r\n            infos: infos,\r\n            showPopup: !this.state.showPopup\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        //console.log(typeof(this.state.pruefungenInfos));\r\n        //console.log(this.state.pruefungenInfos[0]);\r\n        if (this.state.date === \"\") { this.state.date = new Date();}\r\n        fetch(\"http://localhost:8000/api/liste/\",{\r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        \r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    pruefungen: result,\r\n                    \r\n                    calendar: this.renderCalendar(this.state.pruefungenInfos, this.state.date)[0]\r\n                    \r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        );\r\n        updateState(this.state.aktiveFilter, this.state.searchItem);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n       const { error, isLoaded, pruefungen} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenHeader = [];\r\n            var pruefungenInfos1 = [];\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    \r\n                        pruefungenHeader.push(\r\n                        <td style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_col_head'}>\r\n                                <b>{pruefungenKeys[i]}</b>\r\n                        </td>);\r\n                    \r\n                                    \r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    \r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    let filteredOut = false;\r\n                    let containsSearch = false\r\n\r\n                    \r\n\r\n                    if (!(pruefungenValues[5] == null)) {\r\n\r\n                        let pruefungDatum = pruefungenValues[5].split('-');\r\n                        pruefungDatum[1] = parseInt(pruefungDatum[1]);\r\n                        if (typeof pruefungDatum[2] === 'string') {\r\n                            pruefungDatum[2] = parseInt(pruefungDatum[2].split(' ')[0]);\r\n                        }\r\n                        \r\n                        for(let j = 1; j<pruefungenValues.length; j++){\r\n                                                \r\n                            if(typeof(this.state.aktiveFilter[j])!=\"undefined\"&&this.state.aktiveFilter[j]!=pruefungenValues[j]){\r\n                                filteredOut = true;\r\n                            }\r\n                            if(pruefungenValues[j]==null){\r\n                                pruefungenValues[j]=\"\"\r\n                            }\r\n                            if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLocaleLowerCase())){\r\n                                containsSearch = true;\r\n                            }\r\n                        }\r\n                        pruefungenInfos1[0] = \"test\";\r\n                        if(!filteredOut&&containsSearch) {\r\n                            let tag = (pruefungDatum[1]-1)*31 + pruefungDatum[2];\r\n                            if (typeof(pruefungenInfos1[tag]) === \"undefined\") {\r\n                                pruefungenInfos1[tag] = [];\r\n                            }\r\n                            let pruefungenInstance = [];\r\n                            for (let j = 1; j<pruefungenValues.length; j++){\r\n                                pruefungenInstance.push(<td>{pruefungenValues[j]}</td>);\r\n                            }\r\n                            console.log(pruefungenInstance);\r\n                            let included = false;\r\n                            let includedAt = -1;\r\n                            for(let k = 0; k<pruefungenInfos1[tag].length; k++){\r\n                                if(pruefungenInfos1[tag][k][1] === pruefungenValues[3]) {\r\n                                    included = true;\r\n                                    includedAt = k;\r\n                                }\r\n                            }\r\n\r\n                            if (!included){\r\n                                pruefungenInfos1[tag].push([parseInt(pruefungDatum[0]), pruefungenValues[3], [<tr><td id = \"categorycontent\">{pruefungenInstance}</td></tr>]]);\r\n                            }\r\n                            else {\r\n                                pruefungenInfos1[tag][includedAt][2].push(<tr><td id = \"categorycontent\">{pruefungenInstance}</td></tr>);\r\n                            }\r\n                            console.log(pruefungenInfos1[tag]);\r\n                        }\r\n                    }   \r\n                }\r\n            }  \r\n            \r\n            //console.log(pruefungenInfos1[0]);\r\n            this.state.pruefungenInfos = pruefungenInfos1;\r\n        }\r\n\r\n        \r\n\r\n    \r\n        return(\r\n            <>\r\n            <table id = \"month\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td className=\"prev\" onClick={()=>{\r\n                            this.state.calendar = this.prevMonth(this.state.pruefungenInfos, this.state.date)[0]; \r\n                            updateState(this.state.aktiveFilter, this.state.searchItem);\r\n                            \r\n                            }}>\r\n                        {'\\u276E'}\r\n                        </td>\r\n                        \r\n                        <td id = \"cur_month\">\r\n                            A\r\n                        </td>\r\n                        \r\n                        <td className=\"next\" onClick={()=>{\r\n                            this.state.calendar = this.nextMonth(this.state.pruefungenInfos, this.state.date)[0]; \r\n                            updateState(this.state.aktiveFilter, this.state.searchItem);\r\n                            }}>\r\n                            {'\\u276F'}\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td></td>\r\n                        <td id = \"cur_year\">\r\n                            <p>2022</p>\r\n                        </td>\r\n                        <td></td>\r\n                        \r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <table id = \"calendar_table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Mo</th>\r\n                        <th>Di</th>\r\n                        <th>Mi</th>\r\n                        <th>Do</th>\r\n                        <th>Fr</th>\r\n                        <th>Sa</th>\r\n                        <th>So</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id = \"days\">\r\n                    {this.state.calendar}\r\n                    {/*Hier wird der Kalender generiert*/}\r\n                    {/*ToDo: FÃ¼llen der content divs mit Terminen*/}\r\n                </tbody>\r\n\r\n            </table>\r\n\r\n            {this.state.showPopup ? \r\n            <KalenderPopup\r\n                categories={pruefungenHeader}\r\n                infos={this.state.infos}\r\n                closePopup={this.togglePopup.bind(this)}\r\n            />\r\n            : null\r\n            }\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\uebersicht\\UebersichtContent.jsx",["66","67"],[],"import React from 'react';\r\nimport { updateState } from '../landing/Structure';\r\nimport '../../css/uebersicht.css';\r\n\r\nfunction SpaltenScript() {\r\n    const columns_btn = document.querySelector('.hide_columns');\r\n    const checkboxes = document.querySelector('#checkboxes');\r\n    const outer_frame = document.querySelector('#outer_frame');\r\n\r\n    columns_btn.classList.toggle('is-active');\r\n    checkboxes.classList.toggle('is-active');\r\n    outer_frame.classList.toggle('spalten-is-active');\r\n\r\n    columns_btn.firstChild.data = columns_btn.firstChild.data === \"<\" ? \"Spalten >\" : \"<\";\r\n    columns_btn.childNodes[1].data = \"\";\r\n}\r\n\r\nexport default class KalenderContent extends React.Component{\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error:null,\r\n            isLoaded:true,\r\n            pruefungen: [],\r\n            aktiveFilter: [],\r\n            hiddenColumns: [true,true,null,null,null,null,true,true,true,true,null],\r\n            searchItem: ''\r\n        };\r\n        updateState = updateState.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8000/api/liste/\",{\r\n            method:'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        \r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    pruefungen: result,\r\n                    \r\n                });\r\n            },\r\n            (error) => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n        );\r\n    }\r\n    \r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const { error, isLoaded, pruefungen, hiddenColumns} = this.state;\r\n        \r\n        if(error) {return <div>Error: {error.message}</div>}\r\n        else if(!isLoaded) {return <div>Loading...</div>}\r\n\r\n        else {\r\n\r\n            var pruefungenListe = [];\r\n            var pruefungenHeader = [];\r\n            var spaltenFilter = [];\r\n\r\n            if(pruefungen[0]){\r\n                var pruefungenKeys = Object.keys(pruefungen[0]);\r\n                let x = 0;\r\n\r\n                for(let i = 1; i<pruefungenKeys.length; i++){\r\n                    if (!hiddenColumns[i]){\r\n                        pruefungenHeader.push(\r\n                        <td style = {{textTransform: \"capitalize\"}} \r\n                            id = {pruefungenKeys[i]+'_col_head'}>\r\n                                <b>{pruefungenKeys[i]}</b>\r\n                        </td>);\r\n                    }\r\n                    spaltenFilter.push(\r\n                    <li>\r\n                        <input type=\"checkbox\" \r\n                            className=\"show\" \r\n                            id={pruefungenKeys[i]+\"_col\"} \r\n                            onChange={()=> {\r\n                                var col_name = pruefungenKeys[i]+\"_col\";\r\n                                var checkbox_val=document.getElementById(col_name).className;\r\n                                if(!hiddenColumns[i] )\r\n                                {   \r\n                                    hiddenColumns[i] = true;\r\n                                    this.setState({hiddenColumns});\r\n                                }\r\n\r\n                                else\r\n                                {\r\n                                    hiddenColumns[i] = null;\r\n                                    this.setState({hiddenColumns});\r\n                                }\r\n                            }\r\n                            } \r\n                            defaultChecked={!hiddenColumns[i]}/>\r\n                        <label style = {{textTransform: \"capitalize\"}}>{pruefungenKeys[i]}</label>\r\n                    </li>);\r\n                    \r\n                \r\n                }\r\n\r\n                for(let i = 0; i<pruefungen.length; i++) {\r\n                    var pruefungenInstance = [];\r\n                    let pruefungenValues = Object.values(pruefungen[i]);\r\n                    let filteredOut = false;\r\n                    let containsSearch = false\r\n            \r\n                    for(let j = 1; j<pruefungenValues.length; j++){\r\n                        \r\n                        if(!hiddenColumns[j]) {\r\n                            pruefungenInstance.push(<td className = {pruefungenKeys[j]+'_col'}>{pruefungenValues[j]}</td>);\r\n                        }\r\n                        \r\n                        if(this.state.aktiveFilter[j]!==undefined&&this.state.aktiveFilter[j]!=pruefungenValues[j]){\r\n                            filteredOut = true;\r\n                        }\r\n                        if(pruefungenValues[j]==null){\r\n                            pruefungenValues[j]=\"Abdo\"\r\n                        }\r\n                        if(pruefungenValues[j].toString().toLowerCase().match(this.state.searchItem.toLocaleLowerCase())){\r\n                            containsSearch = true;\r\n                        }\r\n                    }\r\n                    \r\n                    if(!filteredOut&&containsSearch) {\r\n                        if(x%2===1){\r\n                            pruefungenListe.push(<tr className = 'second'>{pruefungenInstance}</tr>)\r\n                        } else {\r\n                            pruefungenListe.push(<tr>{pruefungenInstance}</tr>)\r\n                        }\r\n                        x++;\r\n                    }\r\n                }\r\n\r\n                //console.log(typeof(pruefungenListe));\r\n                \r\n            }  \r\n            \r\n            \r\n\r\n            return(\r\n                <>\r\n                <button className=\"hide_columns\" onClick={()=>SpaltenScript()}>Spalte {'\\u003E'}</button>\r\n                <div id=\"checkboxes\" className = \"sidenav\">\r\n                    <ul>\r\n                        <li>\r\n                            <h3 id=\"spaltenHeader\">Spalten</h3>\r\n                        </li>\r\n                        {spaltenFilter}\r\n                        {/*Hier werden die Spaltenfilter generiert*/}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div id = \"ov_content\">\r\n                    <h3 id = \"header_overview\">Ãbersicht</h3>\r\n\r\n                    <table id = \"overview_table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {pruefungenHeader}\r\n                                {/*ToDo: Hier werden die Spaltennamen generiert*/}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {/*<tr>{this.state.aktiveFilter}</tr>}\r\n                            {<tr>{this.state.searchItem}</tr>*/}\r\n                            {pruefungenListe}\r\n                            {/*rows*/}\r\n                        </tbody>\r\n\r\n                    </table>\r\n                </div>  \r\n                </>\r\n            );\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\Content.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Navigation.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Hamburger.jsx",[],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\navigation\\Filter.jsx",["68","69"],[],"C:\\Users\\ashah\\Desktop\\wt2\\WebTech2\\koelender\\frontend\\src\\components\\kalender\\KalenderPopup.jsx",[],[],{"ruleId":"70","severity":1,"message":"71","line":27,"column":29,"nodeType":"72","messageId":"73","endLine":27,"endColumn":46},{"ruleId":"74","severity":1,"message":"75","line":176,"column":39,"nodeType":"72","messageId":"76","endLine":176,"endColumn":49},{"ruleId":"77","severity":1,"message":"78","line":250,"column":107,"nodeType":"79","messageId":"80","endLine":250,"endColumn":109},{"ruleId":"74","severity":1,"message":"75","line":293,"column":13,"nodeType":"72","messageId":"76","endLine":293,"endColumn":23},{"ruleId":"74","severity":1,"message":"75","line":305,"column":29,"nodeType":"72","messageId":"76","endLine":305,"endColumn":39},{"ruleId":"74","severity":1,"message":"75","line":317,"column":29,"nodeType":"72","messageId":"76","endLine":317,"endColumn":39},{"ruleId":"81","severity":1,"message":"82","line":94,"column":37,"nodeType":"83","messageId":"84","endLine":94,"endColumn":49},{"ruleId":"77","severity":1,"message":"78","line":127,"column":94,"nodeType":"79","messageId":"80","endLine":127,"endColumn":96},{"ruleId":"85","severity":1,"message":"86","line":60,"column":45,"nodeType":"87","messageId":"88","endLine":60,"endColumn":56},{"ruleId":"77","severity":1,"message":"89","line":74,"column":90,"nodeType":"79","messageId":"80","endLine":74,"endColumn":92},"no-self-assign","'this.updateFilter' is assigned to itself.","MemberExpression","selfAssignment","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","noDirectMutation","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'checkbox_val' is assigned a value but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","Expected '===' and instead saw '=='."]